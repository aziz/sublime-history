%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Batch File
file_extensions:
  - bat
  - cmd
scope: source.dosbatch
contexts:
  main:
    - include: comments
    - include: strings
    - include: operators
    - match: \b(?i)(?:append|assoc|at|attrib|break|cacls|cd|chcp|chdir|chkdsk|chkntfs|cls|cmd|color|comp|compact|convert|copy|date|del|dir|diskcomp|diskcopy|doskey|echo|endlocal|erase|fc|find|findstr|format|ftype|graftabl|help|keyb|label|md|mkdir|mode|more|move|path|pause|popd|print|prompt|pushd|rd|recover|ren|rename|replace|restore|rmdir|set|setlocal|shift|sort|start|subst|time|title|tree|type|ver|verify|vol|xcopy)\b
      scope: keyword.command.dosbatch
    - match: \b(?i)(?:goto|call|exit)\b
      scope: keyword.control.statement.dosbatch
    - match: \b(?i)if\s+((not)\s+)(exist|defined|errorlevel|cmdextversion)\b
      scope: keyword.control.conditional.if.dosbatch
    - match: \b(?i)(?:if|else)\b
      scope: keyword.control.conditional.dosbatch
    - match: \b(?i)for\b
      scope: keyword.control.repeat.dosbatch

  operators:
    - match: '@(?=\S)'
      scope: keyword.operator.at.dosbatch
    - match: \b(?i:EQU|NEQ|LSS|LEQ|GTR|GEQ|==)\b
      scope: keyword.operator.comparison.dosbatch
    - match: '&&?|\|\|'
      scope: keyword.operator.conditional.dosbatch
    - match: '\|'
      scope: keyword.operator.pipe.dosbatch
    - match: '<&?|>[&>]?'
      scope: keyword.operator.redirection.dosbatch

  comments:
    - match: '(:[+=,;:])'
      scope: punctuation.definition.comment.dosbatch
      push:
        - meta_scope: comment.line.colon.dosbatch
        - match: \n
          pop: true
      # REM command
      # https://technet.microsoft.com/en-us/library/bb490986.aspx
    - match: \b((?i)rem)\s+
      captures:
        1: keyword.command.rem.dosbatch
      push:
        - meta_content_scope: comment.line.rem.dosbatch
        - match: \n
          pop: true
        - match: '[(|)]'
          scope: invalid.illegal.unexpected-character.dosbatch

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.dosbatch
      push:
        - meta_scope: string.quoted.double.dosbatch
        - match: (")|(\n)
          captures:
            1: punctuation.definition.string.end.dosbatch
            2: invalid.illegal.newline.dosbatch
          pop: true
